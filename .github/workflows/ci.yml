name: ci

on:
  push:
    # Triggers on commits to any branch and tag pushes.
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: leafo/gh-actions-lua@v11
      - uses: leafo/gh-actions-luarocks@v5

      - name: Install luacheck via LuaRocks
        run: luarocks install luacheck --local

      - name: Run luacheck
        run: luacheck .

      - name: Run stylua
        uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --check .
          version: latest
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: leafo/gh-actions-lua@v11
      - uses: leafo/gh-actions-luarocks@v5

      - name: Install busted via LuaRocks
        run: luarocks install busted

      - name: Run busted
        run: busted WHATSTHEKEY_test.lua -p _test

  release:
    needs: lint
    runs-on: ubuntu-latest

    if: ${{ startsWith(github.ref, 'refs/tags/') }}  # Only run for tag pushes

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create zip archive and generate sha256 checksum
        run: |
          mkdir -p release
          # Archive the repository while excluding Git metadata;
          zip -r release/WhatsTheKey.zip Art Libs embeds.xml WHATSTHEKEY.lua WHATSTHEKEY.toc  -x "*.git*"
          sha256sum release/WhatsTheKey.zip > release/WhatsTheKey.zip.sha256

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false

      - name: Upload Zip Archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # reference step by id
          asset_path: ./release/WhatsTheKey.zip
          asset_name: "WhatsTheKey.zip"
          asset_content_type: application/zip

      - name: Upload Checksum File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # reference step by id
          asset_path: ./release/WhatsTheKey.zip.sha256
          asset_name: "WhatsTheKey.zip.sha256"
          asset_content_type: text/plain